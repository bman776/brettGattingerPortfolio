$primary-color: #444;
$primary-color-darker: #333;
$secondary-color: #eece1a;
$show-home-image: true;
/*remember: workspace settings have sass compiling .css file to the /dist/css folder! */
$home-image: url(../img/background.jpg);
$background-opacity: 0.6;
$main-footer-height: 60px;

// a mixin is basically like a function
@mixin easeOut {
    transition: all .5s ease-out;
}

@mixin background {
    @if $show-home-image {
        &#bg-img {
            background: $home-image;
            background-attachment: fixed;
            background-size: cover;
            
            //Pseudo element, css treats this as an element despite it not being in the original html
            // In this case this is the element that we're using to overlay the background image in main element
            // while keeping the text clear
            &:after {
                content:'';
                position: absolute;
                top: 0;
                right: 0;
                width: 100%;
                height: 100%;
                z-index: -1;    //push behind content, we want the color being overlayed here to be behind the text so text is full color but background image is overlayed
                background: rgba($primary-color, $background-opacity); //need rgba for opacity
            }
        }
    }
}

// Set Text Color
@function set-text-color($color) {
    @if (lightness($color) > 40) {
        @return #000;
    } @else {
        @return #fff;
    }
}

//Media Query Mixins
/* 
Remember: These mixins are based on minimum and maximum screen widths of the devices accessing portfolio
This means its possible for them to stack (a device which triggers mediaSm will also trigger mediaMd)
*/

// Media small
@mixin mediaSm {
    //media query
    @media screen and (max-width:500px) { //apply following css only if screen width is <= 500 px
        //@ content here means that we can specifiy what styling this mixin affects when called with @include 
        @content;
    }
}

// Media medium
@mixin mediaMd {
    //media query
    @media screen and (max-width:768px) { //apply following css only if screen width is <= 768 px
        @content;
    }
}

// Media Large
@mixin mediaLg {
    //media query
    @media screen and (min-width:769px) and (max-width:1170px) { //apply following css only if screen width is <= 500 px
        @content;
    }
}

// Media Extra Large
@mixin mediaXl {
    //media query
    @media screen and (min-width:1171px) { //apply following css only if screen width is <= 500 px
        @content;
    }
}